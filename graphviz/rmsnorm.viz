digraph RMSNorm {
    rankdir=TB;
    node [shape=none, fontname="Courier"];
    bgcolor="lightgray";


    // Input tensor
    input [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#cce5ff">
        <TR><TD COLSPAN="8"><B>Input x [4 × 8]</B></TD></TR>
        <TR><TD> 0.12</TD><TD>-0.56</TD><TD> 1.34</TD><TD> 0.22</TD><TD>-1.05</TD><TD> 0.87</TD><TD>-0.44</TD><TD> 0.09</TD></TR>
        <TR><TD>-0.98</TD><TD> 0.45</TD><TD>-0.11</TD><TD> 0.66</TD><TD> 0.73</TD><TD>-0.35</TD><TD> 0.28</TD><TD>-0.62</TD></TR>
        <TR><TD> 0.53</TD><TD>-0.77</TD><TD> 0.08</TD><TD>-0.34</TD><TD> 0.19</TD><TD> 1.02</TD><TD>-0.59</TD><TD> 0.41</TD></TR>
        <TR><TD> 1.21</TD><TD>-0.14</TD><TD> 0.38</TD><TD> 0.77</TD><TD>-0.91</TD><TD> 0.64</TD><TD>-0.27</TD><TD> 0.15</TD></TR>
        </TABLE>
    >];

    // Squared tensor
    squared [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#ffcccc">
        <TR><TD COLSPAN="8"><B>x² [4 × 8]</B></TD></TR>
        <TR><TD>0.01</TD><TD>0.31</TD><TD>1.80</TD><TD>0.05</TD><TD>1.10</TD><TD>0.76</TD><TD>0.19</TD><TD>0.01</TD></TR>
        <TR><TD>0.96</TD><TD>0.20</TD><TD>0.01</TD><TD>0.44</TD><TD>0.53</TD><TD>0.12</TD><TD>0.08</TD><TD>0.38</TD></TR>
        <TR><TD>0.28</TD><TD>0.59</TD><TD>0.01</TD><TD>0.12</TD><TD>0.04</TD><TD>1.04</TD><TD>0.35</TD><TD>0.17</TD></TR>
        <TR><TD>1.46</TD><TD>0.02</TD><TD>0.14</TD><TD>0.59</TD><TD>0.83</TD><TD>0.41</TD><TD>0.07</TD><TD>0.02</TD></TR>
        </TABLE>
    >];

    // Mean across embedding dim
    mean [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#ffe699">
        <TR><TD><B>Mean(x²) [4 × 1]</B></TD></TR>
        <TR><TD>0.53</TD></TR>
        <TR><TD>0.34</TD></TR>
        <TR><TD>0.32</TD></TR>
        <TR><TD>0.44</TD></TR>
        </TABLE>
    >];

    // RMS
    rms [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#d5e8d4">
        <TR><TD><B>sqrt(mean+eps) [4 × 1]</B></TD></TR>
        <TR><TD>0.73</TD></TR>
        <TR><TD>0.58</TD></TR>
        <TR><TD>0.57</TD></TR>
        <TR><TD>0.66</TD></TR>
        </TABLE>
    >];

    // Normalized tensor
    normed [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#f8cecc">
        <TR><TD COLSPAN="8"><B>x / rms [4 × 8]</B></TD></TR>
        <TR><TD> 0.16</TD><TD>-0.77</TD><TD> 1.84</TD><TD> 0.30</TD><TD>-1.44</TD><TD> 1.19</TD><TD>-0.60</TD><TD> 0.12</TD></TR>
        <TR><TD>-1.69</TD><TD> 0.77</TD><TD>-0.19</TD><TD> 1.14</TD><TD> 1.26</TD><TD>-0.60</TD><TD> 0.48</TD><TD>-1.07</TD></TR>
        <TR><TD> 0.93</TD><TD>-1.35</TD><TD> 0.14</TD><TD>-0.60</TD><TD> 0.33</TD><TD> 1.79</TD><TD>-1.03</TD><TD> 0.72</TD></TR>
        <TR><TD> 1.83</TD><TD>-0.21</TD><TD> 0.58</TD><TD> 1.17</TD><TD>-1.38</TD><TD> 0.97</TD><TD>-0.41</TD><TD> 0.23</TD></TR>
        </TABLE>
    >];

    // Weight (γ)
    weight [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#c9daf8">
        <TR><TD COLSPAN="8"><B>Weight γ [1 × 8]</B></TD></TR>
        <TR><TD>0.8</TD><TD>1.2</TD><TD>0.9</TD><TD>1.1</TD><TD>0.7</TD><TD>1.3</TD><TD>1.0</TD><TD>0.95</TD></TR>
        </TABLE>
    >];

    // Output tensor
    output [label=<
        <TABLE BORDER="1" CELLBORDER="1" CELLSPACING="0" BGCOLOR="#b6d7a8">
        <TR><TD COLSPAN="8"><B>Output [4 × 8]</B></TD></TR>
        <TR><TD> 0.13</TD><TD>-0.93</TD><TD> 1.66</TD><TD> 0.33</TD><TD>-1.01</TD><TD> 1.55</TD><TD>-0.60</TD><TD> 0.11</TD></TR>
        <TR><TD>-1.35</TD><TD> 0.92</TD><TD>-0.17</TD><TD> 1.25</TD><TD> 0.88</TD><TD>-0.78</TD><TD> 0.48</TD><TD>-1.02</TD></TR>
        <TR><TD> 0.74</TD><TD>-1.62</TD><TD> 0.13</TD><TD>-0.66</TD><TD> 0.23</TD><TD> 2.33</TD><TD>-1.03</TD><TD> 0.68</TD></TR>
        <TR><TD> 1.47</TD><TD>-0.25</TD><TD> 0.52</TD><TD> 1.28</TD><TD>-0.96</TD><TD> 1.26</TD><TD>-0.41</TD><TD> 0.22</TD></TR>
        </TABLE>
    >];

    // Edges with operation labels
    input -> squared [label="    square"];
    squared -> mean [label="    mean(dim=-1)"];
    mean -> rms [label="    sqrt + eps"];
    rms -> normed [label="    divide"];
    normed -> output [label="*   γ"];
    weight -> output [label="    broadcast mult"];
}
